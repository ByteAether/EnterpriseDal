// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using ByteAether.Ulid;
using DAL.Base.EntityBehavior;
using LinqToDB;
using LinqToDB.Data;
using LinqToDB.Mapping;

#pragma warning disable 1573, 1591
#nullable enable

namespace DAL.Context
{
	public partial class DbCtx : DataConnection
	{
		public DbCtx(DataOptions<DbCtx> options)
			: base(options.Options)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}
}
namespace DAL.Context.Entity
{
	[Table("comment")]
	public partial class Comment : IEntity, IIdentifiable<Ulid>
	{
		[Column("id"     , DataType  = DataType.Binary, IsPrimaryKey = true             )] public Ulid   Id      { get; set; } // ulid
		[Column("post_id", DataType  = DataType.Binary                                  )] public Ulid   PostId  { get; set; } // ulid
		[Column("content", CanBeNull = false          , DataType     = DataType.NVarChar)] public string Content { get; set; } = null!; // TEXT

		#region Associations
		/// <summary>
		/// FK_comment_0
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(PostId), OtherKey = nameof(Entity.Post.Id))]
		public Post Post { get; set; } = null!;
		#endregion
	}

	[Table("post")]
	public partial class Post : IEntity, IIdentifiable<Ulid>
	{
		[Column("id"     , DataType  = DataType.Binary, IsPrimaryKey = true                          )] public Ulid   Id      { get; set; } // ulid
		[Column("user_id", DataType  = DataType.Binary                                               )] public Ulid   UserId  { get; set; } // ulid
		[Column("title"  , CanBeNull = false          , DataType     = DataType.NVarChar, Length = 64)] public string Title   { get; set; } = null!; // varchar(64)
		[Column("content", CanBeNull = false          , DataType     = DataType.NVarChar             )] public string Content { get; set; } = null!; // TEXT

		#region Associations
		/// <summary>
		/// FK_comment_0 backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Comment.PostId))]
		public Comment[] Comments { get; set; } = null!;

		/// <summary>
		/// FK_post_0
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(UserId), OtherKey = nameof(Entity.User.Id))]
		public User User { get; set; } = null!;
		#endregion
	}

	[Table("tenant")]
	public partial class Tenant : IEntity, IIdentifiable<Ulid>
	{
		[Column("id"  , DataType  = DataType.Binary, IsPrimaryKey = true                          )] public Ulid   Id   { get; set; } // ulid
		[Column("name", CanBeNull = false          , DataType     = DataType.NVarChar, Length = 64)] public string Name { get; set; } = null!; // VARCHAR(64)

		#region Associations
		/// <summary>
		/// FK_user_0 backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(User.TenantId))]
		public User[] Users { get; set; } = null!;
		#endregion
	}

	[Table("user")]
	public partial class User : IEntity, IIdentifiable<Ulid>
	{
		[Column("id"       , DataType  = DataType.Binary, IsPrimaryKey = true                          )] public Ulid   Id       { get; set; } // ulid
		[Column("username" , CanBeNull = false          , DataType     = DataType.NVarChar, Length = 64)] public string Username { get; set; } = null!; // VARCHAR(64)
		[Column("tenant_id", DataType  = DataType.Binary                                               )] public Ulid   TenantId { get; set; } // ulid

		#region Associations
		/// <summary>
		/// FK_post_0 backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Post.UserId))]
		public Post[] Posts { get; set; } = null!;

		/// <summary>
		/// FK_user_0
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(TenantId), OtherKey = nameof(Entity.Tenant.Id))]
		public Tenant Tenant { get; set; } = null!;
		#endregion
	}
}
